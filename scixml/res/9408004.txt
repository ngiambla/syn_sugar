 A proper branch is a set of three nodes -- a mother and two daughters -- which are constructed by the parser , using a simple mechanism such as a shift-reduce interpreter , and then ` licensed ' by the principles of grammar .
 There are at least two ways in which each mother 's probabilities can be calculated ; firstly , the probability information of the same type can be used : the daughters ' X-bar probabilities alone could be used in calculating the mother 's X-bar probability .
 Alternatively , a combination of some or all of the daughters ' probability features could be employed , thus making , e.g. , the X-bar probability of the mother dependent upon all the stochastic information from the daughters , including theta and Case probabilities , etc .
 The need for a method of combining the daughter probabilities into a useful figure for the calculation of the mother probabilities is likely to involve trial and error , since theory thus far has had nothing to say on the subject .
 The former method , using only the relevant daughter probabilities , therefore seems to be the most fruitful path to follow at the outset , since it does not require a way of integrating probabilities from different modules while the parse is in progress , nor is it as computationally expensive .
 This has the advantage of making ` pure ' probabilities available , in that the X-bar probability will reflect the likelihood of the structure alone , and will be ` uncontaminated ' by any other information .
 It should then be possible to experiment with different methods of combining these probabilities , other than the obvious ` multiplying them together ' techniques , which could result in one type of probabililty emerging as the most important .
