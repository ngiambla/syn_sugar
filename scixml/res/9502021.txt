 However , Vijay-Shanker and Weir 1993 demonstrate that polynomial time performance can be achieved through the use of structure-sharing made possible by constraints in the way that LIG use stacks .
 Although stacks of unbounded size can arise during a derivation , it is not possible for a to specify that two dependent , unbounded stacks must appear at distinct places in the derivation tree .
 The `` context-freeness '' of PLPATR means that given the three trees shown in Figures and the tree shown in Figure will also be generated by the grammar .
 This gives us a means of efficiently storing the potentially unbounded feature structures associated with nodes in a derivation tree ( derived feature structures ) .
 By analogy with the situation for , derived feature structures can be viewed as consisting of a bounded part ( relevant to rule application ) plus unbounded information about the values of features .
 For each feature , we store in the recognition array a bounded amount of information about its value locally , together with a pointer to a further array element .
 Entries in this element of the recognition array that are compatible ( i.e. unifiable ) with the bounded , local information correspond to different possible values for the feature .
