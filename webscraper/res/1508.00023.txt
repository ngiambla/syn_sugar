 Thus, C(u) is the set of {aj,s} satisfying the above conditions for respective classes of jobs and C( ) is the weighted (by (u)) sum of convex hulls of C(u)s, here C = C( ). (cid:80) has a simple characterization as well.
 As for any j [N ], (j, 1) E, and N (J) = 1 for all J [N ], Cout (cid:110) :(cid:80) i [M ] ihi,s.
 There exist fully polynomial time approximations (FPTAS) for single knapsack, whereas for multi-dimensional knapsack only polynomial time approximations (PTAS) are possible 1  C }.
 N 2 for any single-category decomposable crowd system with , at steady state, after an allocation epoch, the number of 9 Proof: See Appendix II.E.
 Improvisation of JLTT is proposed for a better performance guarantee, while GreedyJob in each pool is proposed for implementability and freedom of selection for customers.
 As for any j [N ], (j, 1) E, and N (J) = 1 for all J [N ], Cout l N (J) i [M ] ihi,s.
 Thus it is suf cient to satisfy the inequality for J = [N ], and hence, s =(cid:80) i [M l] l (cid:80) (cid:80) ihl,i jrj (cid:88) ihi i [M ] .
 In the case of our setting, the number of skills S (dimension) is large and may scale with N, hence this scheme is not suitable.
 As S = O(N ), we can choose a c > 0 such N c minj,s:rj,s>0 rj,s 1 S 1 1 exp ( K) .
 As  > 0 can be chosen arbitrarily small, we can have 2 > 0. j jrj,1,s scales with (N ), for suf ciently large with j for i ihi,s( ), for some > 0.
