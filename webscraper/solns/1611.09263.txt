this paper improves the treatment of equality in guarded dependent typetheory (gdtt), by combining it with cubical type theory (ctt). gdtt is anextensional type theory with guarded recursive types, which are useful forbuilding models of program logics, and for programming and reasoning withcoinductive types. we wish to implement gdtt with decidable type checking,while still supporting non-trivial equality proofs that reason about theextensions of guarded recursive constructions. ctt is a variation ofmartin-l\"of type theory in which the identity type is replaced by abstractpaths between terms. ctt provides a computational interpretation of functionalextensionality, enjoys canonicity for the natural numbers type, and isconjectured to support decidable type-checking. our new type theory, guardedcubical type theory (gctt), provides a computational interpretation ofextensionality for guarded recursive types. this further expands thefoundations of ctt as a basis for formalisation in mathematics and computerscience. we present examples to demonstrate the expressivity of our typetheory, all of which have been checked using a prototype type-checkerimplementation. we show that ctt can be given semantics in presheaves on theproduct of the cube category and a small category with an initial object. wethen show that the category of presheaves on the product of the cube categoryand omega provides semantics for gctt.