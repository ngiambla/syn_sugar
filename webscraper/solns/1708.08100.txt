in this paper we analyze the notion of "stopping time complexity", informallydefined as the amount of information needed to specify when to stop whilereading an infinite sequence. this notion was introduced by vovk and pavlovic(2016). it turns out that plain stopping time complexity of a binary string $x$could be equivalently defined as (a) the minimal plain complexity of a turingmachine that stops after reading $x$ on a one-directional input tape; (b) theminimal plain complexity of an algorithm that enumerates a prefix-free setcontaining $x$; (c)~the conditional complexity $c(x|x*)$ where $x$ in thecondition is understood as a prefix of an infinite binary sequence while thefirst $x$ is understood as a terminated binary string; (d) as a minimal uppersemicomputable function $k$ such that each binary sequence has at most $2^n$prefixes $z$ such that $k(z)<n$; (e) as $\max c^x(x)$ where $c^x(z)$ is plainkolmogorov complexity of $z$ relative to oracle $x$ and the maximum is takenover all extensions $x$ of $x$.  we also show that some of these equivalent definitions become non-equivalentin the more general setting where the condition $y$ and the object $x$ maydiffer. we also answer an open question from chernov, hutter and~schmidhuber.